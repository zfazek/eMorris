!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BLACK	./mill.h	/^static const int BLACK = 2;$/;"	v
Canvas	./canvas.cpp	/^Canvas::Canvas(QWidget* parent) : QWidget(parent) {$/;"	f	class:Canvas
Canvas	./canvas.h	/^class Canvas : public QWidget {$/;"	c
CentralWidget	./centralwidget.cpp	/^CentralWidget::CentralWidget() {$/;"	f	class:CentralWidget
CentralWidget	./centralwidget.h	/^class CentralWidget : public QWidget {$/;"	c
EMPTY	./mill.h	/^static const int EMPTY = 0;$/;"	v
MAX_LONG	./move.h	/^        static const int MAX_LONG = 100;$/;"	m	class:Move
MainWindow	./mainwindow.cpp	/^MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) {$/;"	f	class:MainWindow
MainWindow	./mainwindow.h	/^class MainWindow : public QMainWindow {$/;"	c
Mill	./mill.cpp	/^Mill::Mill() {$/;"	f	class:Mill
Mill	./mill.h	/^class Mill {$/;"	c
Move	./move.cpp	/^Move::Move(Mill *m) {$/;"	f	class:Move
Move	./move.h	/^class Move {$/;"	c
MoveDoubleClicked	./centralwidget.cpp	/^void CentralWidget::MoveDoubleClicked(QListWidgetItem *item) {$/;"	f	class:CentralWidget
Table	./table.cpp	/^Table::Table() {$/;"	f	class:Table
Table	./table.h	/^class Table {$/;"	c
WHITE	./mill.h	/^static const int WHITE = 1;$/;"	v
arity	./move.cpp	/^int Move::arity() {$/;"	f	class:Move
backupPosition	./mill.cpp	/^void Mill::backupPosition() {$/;"	f	class:Mill
backupPosition	./mill.cpp	/^void Mill::backupPosition(const Mill *mill) {$/;"	f	class:Mill
blackHand	./table.h	/^        int blackHand;$/;"	m	class:Table
blackHand_backup	./mill.h	/^        int blackHand_backup;$/;"	m	class:Mill
buttonHistoryNext	./centralwidget.h	/^        QPushButton* buttonHistoryNext;$/;"	m	class:CentralWidget
buttonHistoryPrev	./centralwidget.h	/^        QPushButton* buttonHistoryPrev;$/;"	m	class:CentralWidget
buttonHistoryToEnd	./centralwidget.h	/^        QPushButton* buttonHistoryToEnd;$/;"	m	class:CentralWidget
buttonHistoryToStart	./centralwidget.h	/^        QPushButton* buttonHistoryToStart;$/;"	m	class:CentralWidget
buttonMove	./centralwidget.h	/^        QPushButton* buttonMove;$/;"	m	class:CentralWidget
canvas	./centralwidget.h	/^        Canvas* canvas;$/;"	m	class:CentralWidget
centralWidget	./mainwindow.h	/^        CentralWidget* centralWidget;$/;"	m	class:MainWindow
children	./move.h	/^        std::vector<Move*> children;$/;"	m	class:Move
convertMoveToCoord	./mill.cpp	/^string Mill::convertMoveToCoord(string move) {$/;"	f	class:Mill
coordHelper	./mill.cpp	/^int coordHelper[] = {$/;"	v
currMove	./move.h	/^        std::string currMove;$/;"	m	class:Move
epsilon	./move.h	/^        static constexpr double epsilon = 1e-6;$/;"	m	class:Move
evaluate	./move.cpp	/^int Move::evaluate(const Move *newNode) {$/;"	f	class:Move
expand	./move.cpp	/^void Move::expand() {$/;"	f	class:Move
getAllMoves	./mill.cpp	/^vector<string> Mill::getAllMoves() {$/;"	f	class:Mill
getBest	./move.cpp	/^Move *Move::getBest() {$/;"	f	class:Move
getBestMoveMCTS	./mill.cpp	/^string Mill::getBestMoveMCTS() {$/;"	f	class:Mill
getBlackHand	./table.cpp	/^int Table::getBlackHand() {$/;"	f	class:Table
getChildren	./move.cpp	/^vector<Move*> Move::getChildren() {$/;"	f	class:Move
getCoordX	./mill.cpp	/^int Mill::getCoordX(int i) {$/;"	f	class:Mill
getCoordY	./mill.cpp	/^int Mill::getCoordY(int i) {$/;"	f	class:Mill
getField	./mill.cpp	/^int Mill::getField(int i) {$/;"	f	class:Mill
getHistory	./mill.cpp	/^vector<QString> Mill::getHistory() {$/;"	f	class:Mill
getHistoryIdx	./mill.cpp	/^int Mill::getHistoryIdx() {$/;"	f	class:Mill
getIdx	./mill.cpp	/^int Mill::getIdx(int x, int y) {$/;"	f	class:Mill
getNofNeighbors	./mill.cpp	/^int Mill::getNofNeighbors(int color) {$/;"	f	class:Mill
getNofPiece	./mill.cpp	/^int Mill::getNofPiece(int color) {$/;"	f	class:Mill
getTerminateMoves	./move.cpp	/^vector<string> Move::getTerminateMoves() {$/;"	f	class:Move
getWhiteHand	./table.cpp	/^int Table::getWhiteHand() {$/;"	f	class:Table
grid	./centralwidget.h	/^        QGridLayout* grid;$/;"	m	class:CentralWidget
hasSoloMorris	./mill.cpp	/^bool Mill::hasSoloMorris(int color) {$/;"	f	class:Mill
hboxBlackHand	./centralwidget.h	/^        QHBoxLayout* hboxBlackHand;$/;"	m	class:CentralWidget
hboxHistoryButton	./centralwidget.h	/^        QHBoxLayout* hboxHistoryButton;$/;"	m	class:CentralWidget
hboxSend	./centralwidget.h	/^        QHBoxLayout* hboxSend;$/;"	m	class:CentralWidget
hboxStart	./centralwidget.h	/^        QHBoxLayout* hboxStart;$/;"	m	class:CentralWidget
hboxWhiteHand	./centralwidget.h	/^        QHBoxLayout* hboxWhiteHand;$/;"	m	class:CentralWidget
history	./mill.h	/^        std::vector<QString> history;$/;"	m	class:Mill
historyIdx	./mill.h	/^        int historyIdx;$/;"	m	class:Mill
historyNext	./centralwidget.cpp	/^void CentralWidget::historyNext() {$/;"	f	class:CentralWidget
historyPrev	./centralwidget.cpp	/^void CentralWidget::historyPrev() {$/;"	f	class:CentralWidget
historyToEnd	./centralwidget.cpp	/^void CentralWidget::historyToEnd() {$/;"	f	class:CentralWidget
historyToStart	./centralwidget.cpp	/^void CentralWidget::historyToStart() {$/;"	f	class:CentralWidget
idx	./move.h	/^        int idx = 0;$/;"	m	class:Move
initGui	./centralwidget.cpp	/^void CentralWidget::initGui() {$/;"	f	class:CentralWidget
initRules	./mill.cpp	/^void Mill::initRules() {$/;"	f	class:Mill
initTable	./mill.cpp	/^void Mill::initTable(bool historyClear) {$/;"	f	class:Mill
isEnd	./mill.cpp	/^int Mill::isEnd() {$/;"	f	class:Mill
isLeaf	./move.cpp	/^bool Move::isLeaf() {$/;"	f	class:Move
isMill	./mill.cpp	/^bool Mill::isMill(int idx, int color) {$/;"	f	class:Mill
isNeighbor	./mill.cpp	/^bool Mill::isNeighbor(int idx1, int idx2) {$/;"	f	class:Mill
labelBlackHand	./centralwidget.h	/^        QLabel* labelBlackHand;$/;"	m	class:CentralWidget
labelHistory	./centralwidget.h	/^        QLabel* labelHistory;$/;"	m	class:CentralWidget
labelMoves	./centralwidget.h	/^        QLabel* labelMoves;$/;"	m	class:CentralWidget
labelTable	./centralwidget.h	/^        QLabel* labelTable;$/;"	m	class:CentralWidget
labelWhiteHand	./centralwidget.h	/^        QLabel* labelWhiteHand;$/;"	m	class:CentralWidget
labelX	./centralwidget.h	/^        QLabel* labelX[7];$/;"	m	class:CentralWidget
labelY	./centralwidget.h	/^        QLabel* labelY[7];$/;"	m	class:CentralWidget
labels	./centralwidget.h	/^        QLabel* labels[24];$/;"	m	class:CentralWidget
lineEditTurn	./centralwidget.h	/^        QLineEdit* lineEditTurn;$/;"	m	class:CentralWidget
listWidget	./centralwidget.h	/^        QListWidget* listWidget;$/;"	m	class:CentralWidget
main	./main.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	./test.cpp	/^int main() {$/;"	f
makeMove	./centralwidget.cpp	/^void CentralWidget::makeMove() {$/;"	f	class:CentralWidget
make_test_is_end	./test.cpp	/^void make_test_is_end(Mill *mill, int expected) {$/;"	f
make_test_move_check	./test.cpp	/^void make_test_move_check(Mill *mill, QString move, int expected) {$/;"	f
mill	./canvas.h	/^        Mill* mill;$/;"	m	class:Canvas
mill	./centralwidget.h	/^        Mill* mill;$/;"	m	class:CentralWidget
mill	./mill.h	/^        int mill[24][4];$/;"	m	class:Mill
mill	./move.h	/^        Mill *mill;$/;"	m	class:Move
millHelper	./mill.cpp	/^int millHelper[] = {$/;"	v
millNeighbors	./mill.cpp	/^int millNeighbors[] = {$/;"	v
move	./mill.cpp	/^int Mill::move(QString input, bool updateHistory) {$/;"	f	class:Mill
moveCheck	./mill.cpp	/^int Mill::moveCheck(QString input, bool makeMove) {$/;"	f	class:Mill
moveCheck	./mill.cpp	/^int Mill::moveCheck(int i, bool makeMove) {$/;"	f	class:Mill
moveCheck	./mill.cpp	/^int Mill::moveCheck(int i1, int i2, bool makeMove) {$/;"	f	class:Mill
moveCheck	./mill.cpp	/^int Mill::moveCheck(int i1, int i2, int i3, bool makeMove) {$/;"	f	class:Mill
n	./mill.h	/^        int n;$/;"	m	class:Mill
n	./move.cpp	/^int n = 0;$/;"	v
nActions	./move.h	/^        static const int nActions = 10;$/;"	m	class:Move
nVisits	./move.h	/^        double nVisits = 0;$/;"	m	class:Move
nextDouble	./move.cpp	/^double Move::nextDouble() {$/;"	f	class:Move
nofNeighbors	./mill.cpp	/^int nofNeighbors[] = {$/;"	v
paintEvent	./canvas.cpp	/^void Canvas::paintEvent(QPaintEvent* event) {$/;"	f	class:Canvas
print	./move.cpp	/^void Move::print() {$/;"	f	class:Move
printGameOver	./centralwidget.cpp	/^void CentralWidget::printGameOver(int isEnd) {$/;"	f	class:CentralWidget
printHistory	./centralwidget.cpp	/^void CentralWidget::printHistory() {$/;"	f	class:CentralWidget
printTable	./centralwidget.cpp	/^void CentralWidget::printTable() {$/;"	f	class:CentralWidget
printTable	./mill.cpp	/^void Mill::printTable() {$/;"	f	class:Mill
restorePosition	./mill.cpp	/^void Mill::restorePosition() {$/;"	f	class:Mill
restorePosition	./mill.cpp	/^void Mill::restorePosition(Mill *mill) {$/;"	f	class:Mill
select	./move.cpp	/^Move *Move::select(int depth) {$/;"	f	class:Move
selectAction	./move.cpp	/^void Move::selectAction() {$/;"	f	class:Move
setHistoryIdx	./mill.cpp	/^void Mill::setHistoryIdx(int idx) {$/;"	f	class:Mill
setPos	./mill.cpp	/^void Mill::setPos(int *t, int whiteHand, int blackHand, bool whiteToMove) {$/;"	f	class:Mill
setTable	./canvas.cpp	/^void Canvas::setTable(Mill* t) {$/;"	f	class:Canvas
t_backup	./mill.h	/^        int t_backup[24];$/;"	m	class:Mill
table	./mill.h	/^        Table *table;$/;"	m	class:Mill
table	./table.h	/^        int table[24];$/;"	m	class:Table
test_best_move	./test.cpp	/^void test_best_move() {$/;"	f
test_isEnd	./test.cpp	/^void test_isEnd() {$/;"	f
test_moveXX	./test.cpp	/^void test_moveXX() {$/;"	f
test_speed	./test.cpp	/^void test_speed() {$/;"	f
textEditHistory	./centralwidget.h	/^        QTextEdit* textEditHistory;$/;"	m	class:CentralWidget
totValue	./move.h	/^        double totValue = 0;$/;"	m	class:Move
updateStats	./move.cpp	/^void Move::updateStats(int value) {$/;"	f	class:Move
updateTable	./mill.cpp	/^void Mill::updateTable() {$/;"	f	class:Mill
whiteHand	./table.h	/^        int whiteHand;$/;"	m	class:Table
whiteHand_backup	./mill.h	/^        int whiteHand_backup;$/;"	m	class:Mill
whiteToMove	./table.h	/^        bool whiteToMove;$/;"	m	class:Table
whiteToMove_backup	./mill.h	/^        bool whiteToMove_backup;$/;"	m	class:Mill
~MainWindow	./mainwindow.cpp	/^MainWindow::~MainWindow() {$/;"	f	class:MainWindow
~Mill	./mill.cpp	/^Mill::~Mill() {$/;"	f	class:Mill
~Move	./move.cpp	/^Move::~Move() {$/;"	f	class:Move
